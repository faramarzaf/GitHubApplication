ext {

    def corektxVersion = "1.3.2"
    def kotlin_stdlibVersion = "1.3.72"
    def appcompatVersion = "1.2.0"
    def legacyVersion = "1.0.0"
    def constraintLayoutVersion = "2.0.4"
    def roomVersion = "2.2.6"
    def coroutineVersion = "1.3.5"
    def lifecycleVersion = "2.2.0"
    def retrofitVersion = "2.9.0"
    def okHttp3Version = "4.7.2"
    def navigationVersion = "2.3.2"
    def pagingVersion = "3.0.0-alpha03"
    def glideVersion = "4.11.0"
    def faramarzSdkVersion = "1.0.21"


    def androidxTestVersion = "1.3.0"
    def junitVersion = "4.13"
    def hamcrestVersion = "1.3"
    def androidxArchTestingVersion = "2.1.0"
    def robolectricVersion = "4.3.1"
    def kotlinxCoroutinesTestVersion = "1.2.1"
    def truthVersion = "1.0.1"
    def mockitoVersion = "2.21.0"
    def dexmakerMockitoVersion = "2.12.1"
    def espressoVersion = "3.3.0"
    def hiltTestVersion = "2.28-alpha"
    def fragmentTestingVersion = "1.3.0-rc01"
    def espressoContribVersion = "3.3.0"
    def test_ext_junitVersion = "1.1.2"
    def hiltVersion = "1.0.0-alpha02"
    def hiltAndroidVersion = "2.28-alpha"

    coreKtx = [
            core         : "androidx.core:core-ktx:$corektxVersion",
            kotlin_stdlib: "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_stdlibVersion",
    ]

    appCompat = [
            appcompat: "androidx.appcompat:appcompat:$appcompatVersion"
    ]

    legacy = [
            legacy: "androidx.legacy:legacy-support-v4:$legacyVersion"
    ]

    constraintLayout = [
            constraintlayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    ]

    room = [
            room_runtime : "androidx.room:room-runtime:$roomVersion",
            room_compiler: "androidx.room:room-compiler:$roomVersion",
            room_ktx     : "androidx.room:room-ktx:$roomVersion"
    ]

    coroutines = [
            core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion",
            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"
    ]

    lifecycle = [
            runtime  : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion",
            viewmodel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    ]

    retrofit = [
            retrofit      : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            converter_gson: "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            okhttp3       : "com.squareup.okhttp3:logging-interceptor:$okHttp3Version"
    ]

    navigation = [
            fragment: "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            ui      : "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    ]

    paging = [
            paging3: "androidx.paging:paging-runtime:$pagingVersion"
    ]

    glide = [
            glide   : "com.github.bumptech.glide:glide:$glideVersion",
            compiler: "com.github.bumptech.glide:compiler:$glideVersion"
    ]

    faramarzSDK = [
            sdk: "com.github.faramarzaf:Android-SDK:$faramarzSdkVersion"
    ]

    dagger_hilt = [
            daggerHiltAndroid        : "com.google.dagger:hilt-android:$hiltAndroidVersion",
            daggerHiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$hiltAndroidVersion",
            daggerHilt               : "androidx.hilt:hilt-lifecycle-viewmodel:$hiltVersion",
            daggerHiltCompiler       : "androidx.hilt:hilt-compiler:$hiltVersion"
    ]


    unitTest = [
            core                   : "androidx.test:core:$androidxTestVersion",
            junit                  : "junit:junit:$junitVersion",
            hamcrest               : "org.hamcrest:hamcrest-all:$hamcrestVersion",
            androidx_arch_core     : "androidx.arch.core:core-testing:$androidxArchTestingVersion",
            robolectric            : "org.robolectric:robolectric:$robolectricVersion",
            kotlinx_coroutines_test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinxCoroutinesTestVersion",
            truth                  : "com.google.truth:truth:$truthVersion",
            mockito                : "org.mockito:mockito-core:$mockitoVersion"
    ]


    uiTest = [
            core                   : "androidx.test:core:$androidxTestVersion",
            junit                  : "junit:junit:$junitVersion",
            hamcrest               : "org.hamcrest:hamcrest-all:$hamcrestVersion",
            androidx_arch_core     : "androidx.arch.core:core-testing:$androidxArchTestingVersion",
            robolectric            : "org.robolectric:robolectric:$robolectricVersion",
            kotlinx_coroutines_test: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinxCoroutinesTestVersion",
            truth                  : "com.google.truth:truth:$truthVersion",
            mockito                : "org.mockito:mockito-core:$mockitoVersion",
            dexmaker_mockito       : "com.linkedin.dexmaker:dexmaker-mockito:$dexmakerMockitoVersion",
            espresso               : "androidx.test.espresso:espresso-core:$espressoVersion",
            test_hilt_android      : "com.google.dagger:hilt-android-testing:$hiltTestVersion",
            test_hilt_compiler     : "com.google.dagger:hilt-android-compiler:$hiltTestVersion",
            ext_junit              : "androidx.test.ext:junit:$test_ext_junitVersion",
            // set Android folder to project folder
            // we should make debug folder in root project package by click on src and directory
            // 1- make debug directory   2- make java directory 3- make you own package-name
            fragment               : "androidx.fragment:fragment-testing:$fragmentTestingVersion",
            contrib                : "androidx.test.espresso:espresso-contrib:$espressoContribVersion"// simulate on click recyclerview

    ]

}

